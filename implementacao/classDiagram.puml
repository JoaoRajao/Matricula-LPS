@startuml
skinparam classAttributeIconSize 0

class Aluno {
    
    - String nome
    - String matricula
    - Curso curso
    - List<Disciplina> disciplinasObrigatorias
    - List<Disciplina> disciplinasOptativas
    - String login
    - String senha
    + AlunoController() : void
    + adicionarAluno(Aluno aluno) : void
    + carregarAlunos() : List<Aluno>
    + matricularDisciplinas(Aluno aluno, List<Disciplina> disciplinas) : void
    + cancelarMatricula(Aluno aluno, Disciplina disciplina) : void
    + visualizarDisciplinasMatriculadas(Aluno aluno) : List<String>

    
    + Aluno(String nome, String matricula, Curso curso, String login, String senha) : void
    + getDisciplinasMatriculadas() : List<Disciplina>
    + toString() : String
}



class Curso {
    
    - String nome
    - int creditos
    - List<Disciplina> disciplinas

    
    + adicionarDisciplinaAoCurso(Curso curso, Disciplina disciplina) : void
    + removerDisciplinaDoCurso(Curso curso, Disciplina disciplina) : void
    + listarDisciplinasDoCurso(Curso curso) : List<Disciplina>

    
    + Curso(String nome, int creditos) : void
    + toString() : String
}

class Disciplina {
    - String nome
    - int creditos
    - Professor professor
    - List<Aluno> alunos
    - TipoDisciplina tipo
    - final int maxAlunos
    - final int minAlunos
    - boolean ativa
    - boolean inscricoesEncerradas

    + adicionarAlunoADisciplina(Disciplina disciplina, Aluno aluno) : void
    + removerAlunoDaDisciplina(Disciplina disciplina, Aluno aluno) : void
    + verificarSeDisciplinaEstaAtiva(Disciplina disciplina) : boolean
    + alterarProfessorDaDisciplina(Disciplina disciplina, Professor professor) : void
    + listarAlunosDaDisciplina(Disciplina disciplina) : List<Aluno>

    + Disciplina(String nome, int creditos, Professor professor, TipoDisciplina tipo) : void
    + toString() : String
}

class Professor {
    - String nome
    - String id
    - List<Disciplina> disciplinas
    - String login
    - String senha

    + adicionarProfessor(Professor professor) : void
    + carregarProfessores() : List<Professor>
    + visualizarDisciplinasLecionadas(Professor professor) : List<String>
    + visualizarAlunosPorDisciplina(Professor professor) : Map<String, List<Aluno>>

    + Professor(String nome, String id, String login, String senha) : void
    + toString() : String
}

class Secretaria {
    - List<Curso> cursos
    - List<Disciplina> disciplinas
    - List<Professor> professores
    - List<Aluno> alunos
    - String login
    - String senha

    + adicionarCurso(Secretaria secretaria, Curso curso) : void
    + adicionarProfessor(Secretaria secretaria, Professor professor) : void
    + adicionarDisciplina(Secretaria secretaria, Disciplina disciplina) : void
    + adicionarDisciplinaAoProfessor(Disciplina disciplina, Professor professor) : void
    + adicionarAluno(Secretaria secretaria, Aluno aluno) : void
    + listarCursos(Secretaria secretaria) : List<Curso>
    + listarProfessores(Secretaria secretaria) : List<Professor>
    + listarDisciplinas(Secretaria secretaria) : List<Disciplina>
    + listarAlunos(Secretaria secretaria) : List<Aluno>
    + verificarStatusDisciplina(Disciplina disciplina) : boolean
    - cancelarDisciplina(Disciplina disciplina) : void

    + Secretaria(String login, String senha) : void
    + toString() : String
}

enum TipoDisciplina {
    OBRIGATORIA
    OPTATIVA
}


Aluno "0..*" --> "0..*" Disciplina
Aluno "0..*" --> "1" Curso
Disciplina "0..*" --> "1" Professor
Curso "1" --> "0..*" Disciplina
Secretaria "1" --> "0..*" Curso
Secretaria "1" --> "0..*" Disciplina
Secretaria "1" --> "0..*" Professor
Secretaria "1" --> "0..*" Aluno
Disciplina --> TipoDisciplina : tipo
@enduml
